<?php
namespace App\Api;

use PhalApi\Api;
use PhalApi\Exception\BadRequestException;
/**
 * 微信开发接口
 *
 * @author: dogstar <chanzonghuang@gmail.com> 2014-10-04
 */

class Wechat extends Api
{
    //接入微信公众平台
    public function index()
    {
        $echostr=$_GET["echostr"];
        if (!$echostr) {
            //$this->response();
            $this->makemenu();
            $this->responseMsg();
        }
        //file_put_contents('1.txt',111);
        $token=\PhalApi\DI()->config->get('app.wechat.token');
        //接收微信服务器传来的值
        $signature=$_GET["signature"];
        $timestamp=$_GET["timestamp"];
        $nonce=$_GET["nonce"];
        //按照微信平台方法运算
        $tmpArr = array($timestamp,$token, $nonce);
        sort($tmpArr, SORT_STRING);
        $tmpStr = implode( $tmpArr );
        $tmpStr = sha1( $tmpStr );
        //file_put_contents('1.txt',$tmpStr);
        //file_put_contents('2.txt',$signature);
        if( $signature==$tmpStr ){
            echo $echostr;
        }else{
            //echo $echostr;
            return false;
        }
    }
    //curl函数
    public function curl($url, $data = null)
    {
        $init = curl_init();
        curl_setopt($init, CURLOPT_URL, $url);
        curl_setopt($init, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($init, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($init, CURLOPT_SSL_VERIFYHOST, false);

        if ($data) {
            curl_setopt($init, CURLOPT_POST, true);
            curl_setopt($init, CURLOPT_POSTFIELDS, $data);
        }
        $result = curl_exec($init);
        curl_close($init);
        return $result;
    }
    //获取微信accesstoken
    public function getaccesstoken(){
        $access_token = \PhalApi\DI()->cache->get('access_token');
        if ($access_token) {
            return $access_token;
        }else{
            $appid = \PhalApi\DI()->config->get('app.wechat.appid');
            $appsecret = \PhalApi\DI()->config->get('app.wechat.appsecret');
            $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=$appid&secret=$appsecret";
            $data = $this->curl($url);
            $data = json_decode($data,true);
            $access_token = $data['access_token'];
            \PhalApi\DI()->cache->set("access_token",$access_token, 60*60);
            if ($access_token) {
                return $access_token;
            }else{
                return false;
            }
        }
    }
    //生成菜单
    public function makemenu()
    {
        $access_token = $this->getaccesstoken();
        $url = "https://api.weixin.qq.com/cgi-bin/menu/create?access_token=".$access_token;
        $menu = <<<MENU
        {
             "button":[
             {
                  "type":"click",
                  "name":"我要请假",
                  "key":"V1001_TODAY_MUSIC"
              },
              {
                   "name":"菜单",
                   "sub_button":[
                   {
                       "type":"view",
                       "name":"认证个人信息",
                       "url":"http://www.soso.com/"
                    },
                    {
                       "type":"click",
                       "name":"签到",
                       "key":"V1001_GOOD"
                    }]
               }]
            }
MENU;
        $data = $this->curl($url,$menu);
        echo $data;
        //print_r($data);
    }

    //消息类型
    public function responseMsg()
    {
        $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];
        file_put_contents('2.txt',$RX_TYPE);
        if (!empty($postStr)){
            $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
            $RX_TYPE = trim($postObj->MsgType);
            //用户发送的消息类型判断
            switch ($RX_TYPE)
            {
                case "text":    //文本消息
                    $result = $this->receiveText($postObj);
                    break;
                case "image":   //图片消息
                    $result = $this->receiveImage($postObj);
                    break;

                case "voice":   //语音消息
                    $result = $this->receiveVoice($postObj);
                    break;
                case "video":   //视频消息
                    $result = $this->receiveVideo($postObj);
                    break;
                case "location"://位置消息
                    $result = $this->receiveLocation($postObj);
                    break;
                case "link":    //链接消息
                    $result = $this->receiveLink($postObj);
                    break;
                default:
                    $result = "unknow msg type: ".$RX_TYPE;
                    break;
            }
            echo $result;
        }else {
            echo "";
            exit;
        }
    }

    private function receiveText($object)
    {
        $content = "你发送的是文本，内容为：".$object->Content;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 接收图片消息
     */
    private function receiveImage($object)
    {
        $content = "你发送的是图片，地址为：".$object->PicUrl;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 接收语音消息
     */
    private function receiveVoice($object)
    {
        $content = "你发送的是语音，媒体ID为：".$object->MediaId;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 接收视频消息
     */
    private function receiveVideo($object)
    {
        $content = "你发送的是视频，媒体ID为：".$object->MediaId;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 接收位置消息
     */
    private function receiveLocation($object)
    {
        $content = "你发送的是位置，纬度为：".$object->Location_X."；经度为：".$object->Location_Y."；缩放级别为：".$object->Scale."；位置为：".$object->Label;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 接收链接消息
     */
    private function receiveLink($object)
    {
        $content = "你发送的是链接，标题为：".$object->Title."；内容为：".$object->Description."；链接地址为：".$object->Url;
        $result = $this->transmitText($object, $content);
        return $result;
    }

    /*
     * 回复文本消息
     */
    private function transmitText($object, $content)
    {
        $textTpl = "<xml>
        <ToUserName><![CDATA[%s]]></ToUserName>
        <FromUserName><![CDATA[%s]]></FromUserName>
        <CreateTime>%s</CreateTime>
        <MsgType><![CDATA[text]]></MsgType>
        <Content><![CDATA[%s]]></Content>
        </xml>";
        $result = sprintf($textTpl, $object->FromUserName, $object->ToUserName, time(), $content);
        return $result;
    }          
}